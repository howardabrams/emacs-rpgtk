#+title:  Emacs RPG Toolkit
#+author: Howard Abrams
#+email:  howard@sting
#+date:   2023-10-01 October
#+tags:   emacs rpg solottrpg

This project supplies a collection of functions in Emacs Lisp to allow
developers to more easily craft RPG-inspired programs, especially Solo
RPGs played in Org-formatted files.

Sure, if you are a non-Lisper Emacs user, you may get some benefit,
but this project is supposed to be a /toolkit/ for making (or at least,
emulating) some typical TTRPGs (with or without the table of friends).

Note that different /features/ are stored in different files, described
in each of the following sections, as the idea, your “product” would
=require= individual files.
* Dice Rollers
The basis of most games are random numbers, and RPGs have depended on
dice. The [[file:rpgtk-dice.el][rpgtk-dice]] file contains functions for rolling dice, and
displaying the results.

The function, =rpgtk-roll=, is the primary user interface, as it rolls a
dice based on a /dice expression/, e.g. =3d8+2=, either at the point
location or from a prompt from the user.

[[file:images/screenshot-rpgtk-roll.png]]

Notice in the example, the expression used is displayed on the right
side, and all the dice and calculations are also displayed, as if you
did the math.

Other interesting functions are =rpgtk-roll-again= (to re-roll what was
previously rolled), and =rpgtk-forward-roll= that moves the point to the
next dice expression in the current buffer.

But a game designer would instead /craft/ the game’s specialty dice
mechanic. For instance, for playing /Year Zero/-based games, like
Vaesen, you roll a pool of six-sided dice, choose the highest, and see
if it is a six.

Using the =thread-first= macro, we can easily write a function:
#+begin_src emacs-lisp
  (defun year-zero-roll (dice-pool)
    "Roll a DICE-POOL number of six sided dice.
    The highest is displayed. All 6s are shown in green."
    (interactive "nDice Pool Size: ")
    (let* ((roll (rpgtk-dice-roll num-dice 6))
           (high (rpgtk-dice-roll-mod roll :max)))
      (rpgtk-message (rpgtk-dice-format-roll high "YZ" 6))))
#+end_src

To display:
[[file:images/screenshot-rpgtk-roll-yz.png]]

Games based on /Blades in the Dark/ have a similar mechanic for rolling
a pool of six-side dice, choosing the highest value, but instead of a
single six being success, a dice of =4= or =5= is a partial success. We
could make a complete function to simulate this dice mechanic:

#+begin_src emacs-lisp
  (defun blades-in-the-dark-roll (dice-pool)
    "Display formatted dice expression for Blades in the Dark.
  Where NUM-DICE are the number six-sided dice to roll."
    (interactive "nNumber of Dice: ")
    (thread-first dice-pool
                  (rpgtk-dice-roll 6)        ; Roll a pool of d6s
                  (rpgtk-dice-roll-mod :max) ; Select the highest
                  (rpgtk-dice-format-roll
                   (format "%dd" dice-pool)  ; Create a dice expression (opt)
                   6                         ; Set the success level
                   4)                        ; Set partial success level
                  (rpgtk-message)))
#+end_src

If the highest roll was a 6, that is shown in a green color (actually
based on the [[file:rpgtk-dice.el::(defface rpgtk-successful-roll][rpgtk-successful-roll]] face), and for a /partial success/,
we use the [[file:rpgtk-dice.el::(defface rpgtk-middlin-roll][rpgtk-middlin-roll]] face:

[[file:images/screenshot-rpgtk-roll-bitd1.png]]

Otherwise, we show that value with a [[file:rpgtk-dice.el::(defface rpgtk-failed-roll][rpgtk-failed-roll]] face:

[[file:images/screenshot-rpgtk-roll-bitd2.png]]

As a final example, in the 5th Edition of /Dungeons and Dragons/, a
player can roll /with advantage/ by rolling two twenty-sided dice,
choosing the higher of the two, and then adding their =modifier= bonus.
The =rpgtk-dice-roll-mod= function call would look something like:

#+begin_src emacs-lisp
  (rpgtk-dice-roll-mod (rpgtk-dice-roll 2 20)
                       :max  ; Choose larger roll
                       :add (or modifier 0)
                       :sum)
#+end_src

See the function documentation for =rpgtk-dice-roll-mod= for a list of
modifications.
